{"version":3,"sources":["service/news-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportImage","fetchHits","a","search","currentPage","get","then","response","data","hits","Searchbar","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","src","alt","ImageGallery","map","id","LoaderGallery","color","height","width","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onClick","onFetchHits","App","loading","error","status","currentPageHits","showModal","addSearch","options","imagesApi","prevState","length","catch","message","finally","prevProps","renderLoadMore","style","textAlign","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2SACAA,IAAMC,SAASC,QAAU,2BACzB,IAWeC,EADK,CAAEC,UARP,uCAAG,mCAAAC,EAAA,iEAASC,cAAT,MAAkB,GAAlB,MAAsBC,mBAAtB,MAAoC,EAApC,oBACTP,IACJQ,IADI,aAEGF,EAFH,iBAEkBC,EAFlB,gBAHG,qCAGH,yDAIJE,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,SALpB,2CAAH,uD,OC8CAC,E,4MA7CbC,MAAQ,CACNR,OAAQ,I,EAGVS,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEX,OAAQU,EAAEE,cAAcC,MAAMC,iB,EAGhDC,aAAe,SAACL,GACdA,EAAEM,iBAC+B,KAA7B,EAAKR,MAAMR,OAAOiB,SAItB,EAAKC,MAAMC,SAAS,EAAKX,MAAMR,QAC/B,EAAKoB,U,EAGPA,MAAQ,WACN,EAAKT,SAAS,CAAEX,OAAQ,M,4CAG1B,WACE,OACE,wBAAQqB,UAAU,YAAlB,SACE,uBAAMF,SAAUG,KAAKP,aAAcM,UAAU,aAA7C,UACE,wBAAQE,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACER,MAAOS,KAAKd,MAAMR,OAClBqB,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKb,wB,GAtCHmB,aCKTC,EANU,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAjB,OACvB,oBAAIV,UAAU,mBAAd,SACE,qBAAKW,IAAKF,EAAcG,IAAKF,EAAMV,UAAU,8BCOlCa,EARM,SAAC,GAAD,IAAG5B,EAAH,EAAGA,KAAH,OACnB,oBAAIe,UAAU,eAAd,SACGf,EAAK6B,KAAI,gBAAGL,EAAH,EAAGA,aAAcM,EAAjB,EAAiBA,GAAIL,EAArB,EAAqBA,KAArB,OACR,cAAC,EAAD,CAAkBD,aAAcA,EAAuBC,KAAMA,GAAVK,S,iBCD1CC,EAJO,kBACpB,cAAC,IAAD,CAAQd,KAAK,WAAWe,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MCmB9CC,E,uKAlBb,WACEC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,a,oBAGd,WACE,OACE,wBAAQzB,KAAK,SAASF,UAAU,SAAS4B,QAAS3B,KAAKJ,MAAMgC,YAA7D,2B,GATetB,aCqFNuB,E,4MA5Eb3C,MAAQ,CACNF,KAAM,GACNN,OAAQ,GACRoD,SAAS,EACTC,MAAO,KACPC,OAAQ,OACRrD,YAAa,EACbsD,gBAAiB,GACjBC,WAAW,G,EAabC,UAAY,SAACzD,GACX,EAAKW,SAAS,CACZX,OAAQA,EACRC,YAAa,EACbK,KAAM,GACN+C,MAAO,Q,EAIXvD,UAAY,WACV,MAAgC,EAAKU,MAA7BR,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACVyD,EAAU,CAAE1D,SAAQC,eAE1B,EAAKU,SAAS,CAAEyC,SAAS,IAEzBO,EACG7D,UAAU4D,GACVvD,MAAK,SAACG,GACL,EAAKK,UAAS,SAACiD,GAAD,MAAgB,CAC5BtD,KAAK,GAAD,mBAAMsD,EAAUtD,MAAhB,YAAyBA,IAC7BL,YAAa2D,EAAU3D,YAAc,EACrCsD,gBAAgB,YAAKjD,OAGH,IAAhBA,EAAKuD,QACP,EAAKlD,SAAS,CACZ0C,MAAM,4BAAD,OAA8BrD,EAA9B,UAKV8D,OAAM,SAACT,GAAD,OAAW,EAAK1C,SAAS,CAAE0C,MAAOA,EAAMU,aAC9CC,SAAQ,kBAAM,EAAKrD,SAAS,CAAEyC,SAAS,Q,uDA1C5C,c,gCAEA,SAAmBa,EAAWL,GACXA,EAAU5D,SACVsB,KAAKd,MAAMR,QAE1BsB,KAAKxB,c,oBAuCT,WACE,MAA4CwB,KAAKd,MAAzC6C,EAAR,EAAQA,MAAOD,EAAf,EAAeA,QACTc,IADN,EAAwBX,gBACiBM,OAAS,MAAQT,EAC1D,OACE,qCACE,cAAC,EAAD,CAAWjC,SAAUG,KAAKmC,YACzBJ,GAAS,mBAAGc,MAAO,CAAEC,UAAW,SAAU9B,MAAO,OAAxC,SAAkDe,IAE5D,cAAC,EAAD,CAAc/C,KAAMgB,KAAKd,MAAMF,OAE9B8C,GAAW,cAACiB,EAAD,IAEXH,GAAkB,cAAC,EAAD,CAAQhB,YAAa5B,KAAKxB,mB,GArEnC8B,aCCH0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BX,M","file":"static/js/main.76e384c1.chunk.js","sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\nconst KEY = \"21917669-1fedcfe337ac78c8906ac8c38\";\n\nconst fetchHits = async ({ search = \"\", currentPage = 1 }) => {\n  return axios\n    .get(\n      `?q=${search}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits);\n};\n\nconst exportImage = { fetchHits };\nexport default exportImage;\n","import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import PropTypes from \"prop-types\";\n\nclass Searchbar extends Component {\n  state = {\n    search: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ search: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.search.trim() === \"\") {\n      //\n      return;\n    }\n    this.props.onSubmit(this.state.search);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ search: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.search}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","// import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ webformatURL, tags }) => (\n  <li className=\"ImageGalleryItem\">\n    <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","// import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nconst ImageGallery = ({ hits }) => (\n  <ul className=\"ImageGallery\">\n    {hits.map(({ webformatURL, id, tags }) => (\n      <ImageGalleryItem webformatURL={webformatURL} key={id} tags={tags} />\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n\n//   <ul className=\"ImageGallery\">\n//   {/* <!-- Набор <li> с изображениями --> */}\n// </ul>\n","import Loader from \"react-loader-spinner\";\n\nconst LoaderGallery = () => (\n  <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n);\n\nexport default LoaderGallery;\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n\nclass Button extends Component {\n  componentDidMount() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n  render() {\n    return (\n      <button type=\"button\" className=\"Button\" onClick={this.props.onFetchHits}>\n        Load more\n      </button>\n    );\n  }\n}\n// Button.propTypes = {\n//     onClick: PropTypes.func\n//   };\n\nexport default Button;\n","import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import PropTypes from 'prop-types'\n\nimport imagesApi from \"./service/news-api\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport LoaderGallery from \"./components/Loader\";\nimport Button from \"./components/Button\";\n// import Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    hits: [],\n    search: \"\",\n    loading: false,\n    error: null,\n    status: \"idle\",\n    currentPage: 1,\n    currentPageHits: [],\n    showModal: false,\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.search;\n    const nextName = this.state.search;\n    if (prevName !== nextName) {\n      this.fetchHits();\n    }\n  }\n\n  addSearch = (search) => {\n    this.setState({\n      search: search,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    });\n  };\n\n  fetchHits = () => {\n    const { search, currentPage } = this.state;\n    const options = { search, currentPage };\n\n    this.setState({ loading: true });\n\n    imagesApi\n      .fetchHits(options)\n      .then((hits) => {\n        this.setState((prevState) => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n          currentPageHits: [...hits],\n        }));\n\n        if (hits.length === 0) {\n          this.setState({\n            error: `No data on your request \"${search}\"`,\n          });\n        }\n      })\n\n      .catch((error) => this.setState({ error: error.message }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { error, loading, currentPageHits } = this.state;\n    const renderLoadMore = !(currentPageHits.length < 12) && !loading;\n    return (\n      <>\n        <Searchbar onSubmit={this.addSearch} />\n        {error && <p style={{ textAlign: \"center\", color: \"red\" }}>{error}</p>}\n\n        <ImageGallery hits={this.state.hits} />\n\n        {loading && <LoaderGallery />}\n\n        {renderLoadMore && <Button onFetchHits={this.fetchHits} />}\n\n        {/* <Modal /> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}