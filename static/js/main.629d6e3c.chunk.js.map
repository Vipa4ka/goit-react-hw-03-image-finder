{"version":3,"sources":["service/news-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportImage","fetchHits","a","search","currentPage","get","then","response","data","hits","Searchbar","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","src","alt","ImageGallery","map","id","LoaderGallery","color","height","width","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onClick","onFetchHits","App","loading","error","status","currentPageHits","showModal","addSearch","options","imagesApi","prevState","length","catch","message","finally","prevProps","renderLoadMore","style","textAlign","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.629d6e3c.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst KEY = '21917669-1fedcfe337ac78c8906ac8c38';\r\n\r\nconst fetchHits = async ({ search = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(`?q=${search}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);   \r\n}\r\n\r\nconst exportImage = { fetchHits };\r\nexport default exportImage;\r\n\r\n","import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import PropTypes from \"prop-types\";\n\n\nclass Searchbar extends Component {\n  state = {\n    search: '',\n  };\n\n\n  handleChange = (e) => {\n    this.setState({ search: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.search.trim() === '') {\n      //  \n      return;\n    }\n    this.props.onSubmit(this.state.search);\n    this.reset();\n  };\n\n   reset = () => {\n    this.setState({ search: \"\"});\n  };\n\n  \n\n  render() {\n    return (\n      <header  className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.search}\n            className=\"SearchForm-input\"\n            type=\"text\"   \n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n      \n    )\n  }\n}\n\n\n\n\nexport default Searchbar;\n\n","// import React from \"react\";\n// import PropTypes from \"prop-types\";\n\n\n\nconst ImageGalleryItem = (({webformatURL, tags}) => (\n  <li className=\"ImageGalleryItem\">\n        <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\" />\n</li>\n\n)\n)\n\nexport default ImageGalleryItem;\n\n","// import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\n\nconst ImageGallery = ({hits}) => (\n  <ul className=\"ImageGallery\">\n   {hits.map(({webformatURL, id, tags}) => (       \n     <ImageGalleryItem\n       webformatURL={webformatURL}\n       key={id}\n       tags={tags}\n     />\n      \n    ))}\n  </ul> \n);\n\n\n\n\n\nexport default ImageGallery;\n\n\n\n\n\n\n\n\n\n\n//   <ul className=\"ImageGallery\">\n//   {/* <!-- Набор <li> с изображениями --> */}\n// </ul> ","import Loader from \"react-loader-spinner\";\n\n\n\nconst LoaderGallery = () => (\n  <Loader\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n      />\n);\n\nexport default LoaderGallery;","import React, { Component } from 'react';\n// import PropTypes from \"prop-types\";\n\n\nclass Button extends Component {\n    componentDidMount() {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n    }\n    render() {\n    return(\n        <button type=\"button\" className=\"Button\" onClick={this.props.onFetchHits} >\n            Load more\n        </button>\n    )}\n};\n// Button.propTypes = {\n//     onClick: PropTypes.func\n//   };\n\n\nexport default Button;\n","import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import PropTypes from 'prop-types'\n\n\n\nimport imagesApi  from './service/news-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from \"./components/ImageGallery\";\nimport LoaderGallery from \"./components/Loader\";\nimport Button from \"./components/Button\";\n// import Modal from \"./components/Modal\";\n\n\n\nclass App extends Component {\n  state = {    \n    hits: [],\n    search: '',\n    loading: false,\n    error: null,\n    status: 'idle',\n    currentPage: 1,\n    currentPageHits: [],\n    showModal: false,    \n  };\n\n  componentDidMount() {\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.search;\n    const nextName = this.state.search;\n    if (prevName !== nextName) {\n      this.fetchHits();\n    }\n  };\n\n  addSearch = (search) => {\n    this.setState({\n      search: search,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    });\n  };\n\n  fetchHits = () => {    \n    const { search, currentPage } = this.state;\n    const options = { search, currentPage };\n    \n    this.setState({ loading: true });\n\n    imagesApi.fetchHits(options)    \n      .then(hits => {\n        this.setState( prevState => ({\n        hits: [...prevState.hits, ...hits], \n        currentPage: prevState.currentPage + 1,\n        currentPageHits: [...hits], \n        }));\n        \n      if (hits.length === 0) {\n          this.setState({\n            error: `No data on your request \"${search}\"`});\n        }\n      })\n      \n    .catch(error => this.setState({ error: error.message }))\n      .finally(() => this.setState({ loading: false }));\n  };  \n \n  render() {\n    const { error, loading, currentPageHits } = this.state;\n    const renderLoadMore = !(currentPageHits.length < 12) && !loading;\n    return (\n      <>\n        <Searchbar onSubmit={this.addSearch} />\n        {error  && (<p style={{textAlign: 'center', color: 'red'}}>{error}</p>)}    \n         \n        <ImageGallery hits={this.state.hits} />\n\n        {loading && <LoaderGallery />}\n\n        { renderLoadMore && \n          <Button onFetchHits={this.fetchHits}/> }\n\n       \n       {/* <Modal /> */}\n        \n      </>\n    );\n  }\n};\n\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}